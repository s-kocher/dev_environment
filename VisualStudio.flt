## by rafaelsc

## This is a directory/file filter for WinMerge
## This filter Ignore Visual Studio temporary files, build results, and files generated by popular Visual Studio add-ons
name: Visual Studio Files
desc: Ignore Visual Studio temporary files, build results, and files generated by popular Visual Studio add-ons.

## This is an inclusive (loose) filter
## (it lets through everything not specified)
def: include

## Filters for filenames begin with f:
## Filters for directories begin with d:
## (Inline comments begin with " ##" and extend to the end of the line)


## From: Visual C# Loose (WinMerge Original Filters)

f: \.aps$ ## VC Binary version of resource file, for quick loading
f: \.bsc$ ## VC Browser database
f: \.dll$ ## Windows DLL
f: \.exe$ ## Windows executable
f: \.obj$ ## VC object module file
f: \.pdb$ ## VC program database file (debugging symbolic information)
f: \.res$ ## VC compiled resources file (output of RC [resource compiler])
f: \.suo$ ## VC options file (binary)
f: \.cache$ ## ??
f: \.resource$ ## Compiled resource file.
f: \.xfrm ## ??
f: \.bak$ ## backup

d: \\cvs$ ## CVS control directory
d: \\.svn$ ## Subversion control directory


## From: Exclude Source Control (WinMerge Original Filters)

f: \.(vs[sp])?scc$  ## Visual SourceSafe files

d: \\\.svn$ ## Subversion working copy
d: \\_svn$  ## Subversion working copy ASP.NET Hack
d: \\cvs$   ## CVS control directory
d: \\\.git$ ## Git directory
d: \\\.bzr$ ## Bazaar branch
d: \\\.hg$ ## Mercurial repository


## From: https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

## User-specific files
f: \.suo$
f: \.user$
f: \.userosscache$
f: \.sln.docstates$

## User-specific files (MonoDevelop/Xamarin Studio)
f: \.userprefs$

## Build results
d: \\[Dd]ebug$
d: \\[Dd]ebugPublic$
d: \\[Rr]elease$
d: \\[Rr]eleases$
d: \\x64$
d: \\x86$
d: \\build$
d: \\bld$
d: \\[Bb]in$
d: \\[Oo]bj$

## Visual Studo 2015 cache/options directory
d: \\\.vs$

## MSTest test Results
d: \\[Tt]est[Rr]esult$
f: [Bb]uild[Ll]og\\.

## NUNIT
f: \.VisualState.xml$
f: ^TestResult.xml$

## Visual Studio profiler
f: \.psess$
f: \.vsp$
f: \.vspx$

## Guidance Automation Toolkit
f: \.gpState$

## ReSharper is a .NET coding add-in
d: \\_ReSharper
f: \.[Rr]e[Ss]harper$
f: \.DotSettings.user$

## JustCode is a .NET coding addin-in
f: \.JustCode$

## TeamCity is a build add-in
d: \\_TeamCity

## DotCover is a Code Coverage Tool
f: \.dotCover%

## NCrunch
f: _NCrunch_
f: \..crunch.\.local\.xml$

## Installshield output folder
d: \\[Ee]xpress$

## Click-Once directory
d: \\publish$

## NuGet Packages
f: \.nupkg$
d: \\packages$ ## The packages folder can be ignored because of Package Restore

## Windows Azure Build Output
d: \\csx$
f: \.build\.csdef$

## Windows Store app package directory
d: \\AppPackages$

## Others
f: \.[Cc]ache$
d: \\ClientBin$
f: [Ss]tyle[Cc]op
f: \.dbmdl$
f: \.dbproj\.schemaview$
f: \.pfx$
f: \.publishsettings$
d: \\node_modules$
d: \\bower_components%

## RIA/Silverlight projects
d: \\Generated_Code$

## Backup & report files from converting an old project file
## to a newer Visual Studio version. Backup files are not needed,
## because we have git ;-)
d: \\_UpgradeReport_Files$
d: \\Backup
f: UpgradeLog.?\.XML$
f: UpgradeLog.?\.htm$

## SQL Server files
f: \.mdf$
f: \.ldf$

## SQL Server files
f: \.mdf$
f: \.ldf$

## Business Intelligence projects
f: \.rdl\.data$
f: \.bim\.layout$
f: \.bim_.?\.settings$

## Microsoft Fakes
d: \\FakesAssemblies$

## Node.js Tools for Visual Studio
f: \.ntvs_analysis\.dat$

## Visual Studio 6 build log
f: \.plg$

## Visual Studio 6 workspace options file
f: \.opt$
